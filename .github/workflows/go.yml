name: Go Cross-Compile with Config and Static Files

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        goarch: [amd64, arm64] # 支持多种架构
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23.5'

    - name: Install MinGW 
      if: matrix.os=='windows-latest'
      uses: egor-tensin/setup-mingw@v2  
          
    - name: Configure environment for cross-compilation
      run: |
        echo "GOOS=${{ matrix.os == 'windows-latest' && 'windows' || matrix.os == 'macos-latest' && 'darwin' || 'linux' }}" >> $GITHUB_ENV
        echo "GOARCH=${{ matrix.goarch }}" >> $GITHUB_ENV
        echo "EXTENSION=${{ matrix.os == 'windows-latest' && '.exe' || '' }}" >> $GITHUB_ENV

    - name: Build
      run: |
        CGO_ENABLED=1 go build -o ziproxy_${{ env.GOOS }}_${{ env.GOARCH }}${{ env.EXTENSION }} ./.

    - name: Prepare artifacts directory
      run: |
        mkdir -p dist
        mv ziproxy_${{ env.GOOS }}_${{ env.GOARCH }}${{ env.EXTENSION }} dist/
        cp config.json dist/
        cp -r static dist/ 
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ziproxy_${{ env.GOOS }}_${{ env.GOARCH }}
        path: dist/ziproxy_${{ env.GOOS }}_${{ env.GOARCH }}
